import { ArgumentParserOutput } from "./interfaces";
export declare class ConsoleIO {
    private schemaString;
    private argv;
    schema: ArgumentParserOutput;
    rawValues: Record<string, any>;
    values: Record<string, any>;
    hasErrors: boolean;
    missingArguments: string[];
    constructor(schemaString: string, argv: Record<string, any>);
    static from(schemaString: string, argv: Record<string, any>): ConsoleIO;
    argument<T>(key: string): T;
    option<T>(key: string): T;
    handle(): ConsoleIO;
    validateArguments(): void;
    info(msg: string): void;
    error(msg: string): void;
    success(msg: string): void;
    line(): void;
    table(rows: Record<string, any>[]): void;
    ask(question: string): Promise<string>;
    select(question: string, choices: string[], multiple?: boolean): Promise<string | string[]>;
    confirm(question: string): Promise<boolean>;
    password(question: string, mask?: string): Promise<string>;
}
